import java.io.*;
import java.util.*;
import javax.imageio.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class MainPanel extends JPanel {

	private ORMTool parent;

	//Panels
	private JPanel formPanel;
	private JPanel buttonPanel;

	private TMLabel TITLE_LABEL = new TMLabel("Configuration");
	
	private String[] labels = {"Database: ", "Server Address: ", "Port Number: ", "Username: ", "Password: "};
	private int numPairs = labels.length;


	//Text fields
	private java.util.List<JTextField> textFields;

	//Buttons
	private JButton saveButton, clearButton, cancelButton;

	public MainPanel() {
		initComponents();
		stylePanels();
		addListeners();
		addComponents();
	}

	public void initComponents() {

		//Panels
		//formPanel = new JPanel();
		//buttonPanel = new JPanel();

		//JTextFields
		textFields = new ArrayList<>();

		//Buttons
		saveButton   = new JButton("Save");
		clearButton  = new JButton("Clear");
		cancelButton = new JButton("Cancel");


		//styling
		//TITLE_LABEL.setFont(new Font("Times Roman", Font.BOLD, 22));
	}

	public void addListeners() {

		System.out.println("This must be working");

		this.saveButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event) {
				System.out.println("Save clicked");
				TITLE_LABEL.setText("adfasdf");
			}

		});
		this.clearButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent event) {
				System.out.println("Clear event Clicked.");
			}
		});

		this.cancelButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent event) {
				System.out.println("Cancel event Clicked.");
			}
		});
	}

	public void addComponents() {


		/*Adding Labels
		for(int i = 0; i < numPairs; ++i) {
			TMLabel label = new TMLabel(labels[i], JLabel.TRAILING);
			formPanel.add(label);
			JTextField field = new JTextField(30);
			textFields.add(field);
			label.setLabelFor(field);
			formPanel.add(field);
		}

		SpringUtilities.makeCompactGrid(formPanel,
                                        numPairs, 2, //rows, cols
                                        50, 50,        //initX, initY
                                        20, 20);       //xPad, yPad
		



		add(TITLE_LABEL);
		add(formPanel);
		add(buttonPanel);

		*/

		//Adding Buttons
		add(clearButton);
		add(cancelButton);
		add(saveButton);

	}

	public void stylePanels() {
		//this.formPanel.setLayout(new GridLayout(5, 2));
		//this.buttonPanel.setLayout(new FlowLayout());
		this.setLayout(new FlowLayout());
	}

	public void setParent(ORMTool frame) {
		this.parent = frame;
	}

	public ORMTool getParent() {
		return this.parent;
	}

	private void clearTextFields() {
		for(JTextField field : textFields) 
			field.setText("");
	}

}